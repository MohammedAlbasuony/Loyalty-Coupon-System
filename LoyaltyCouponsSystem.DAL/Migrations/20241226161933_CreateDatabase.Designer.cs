// <auto-generated />
using System;
using LoyaltyCouponsSystem.DAL.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoyaltyCouponsSystem.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241226161933_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CouponRepresentative", b =>
                {
                    b.Property<int>("CouponsCouponID")
                        .HasColumnType("int");

                    b.Property<int>("RepresentativesRepresentativeID")
                        .HasColumnType("int");

                    b.HasKey("CouponsCouponID", "RepresentativesRepresentativeID");

                    b.HasIndex("RepresentativesRepresentativeID");

                    b.ToTable("CouponRepresentative");
                });

            modelBuilder.Entity("CouponStoreKeeper", b =>
                {
                    b.Property<int>("CouponsCouponID")
                        .HasColumnType("int");

                    b.Property<int>("StoreKeepersStoreKeeperID")
                        .HasColumnType("int");

                    b.HasKey("CouponsCouponID", "StoreKeepersStoreKeeperID");

                    b.HasIndex("StoreKeepersStoreKeeperID");

                    b.ToTable("CouponStoreKeeper");
                });

            modelBuilder.Entity("CouponTechnician", b =>
                {
                    b.Property<int>("CouponsCouponID")
                        .HasColumnType("int");

                    b.Property<int>("TechniciansTechnicianID")
                        .HasColumnType("int");

                    b.HasKey("CouponsCouponID", "TechniciansTechnicianID");

                    b.HasIndex("TechniciansTechnicianID");

                    b.ToTable("CouponTechnician");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.AuditLog", b =>
                {
                    b.Property<int>("AuditLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogID"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("AuditLogID");

                    b.HasIndex("AdminID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Coupon", b =>
                {
                    b.Property<int>("CouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponID"));

                    b.Property<DateTime?>("ClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CouponTemplateTemplateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CouponID");

                    b.HasIndex("CouponTemplateTemplateID");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.CouponTemplate", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateID"));

                    b.Property<string>("Branding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TemplateID");

                    b.ToTable("CouponTemplates");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Representative", b =>
                {
                    b.Property<int>("RepresentativeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepresentativeID"));

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepresentativeID");

                    b.ToTable("Representatives");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.StoreKeeper", b =>
                {
                    b.Property<int>("StoreKeeperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreKeeperID"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAttribute")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StoreKeeperID");

                    b.ToTable("StoreKeepers");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Technician", b =>
                {
                    b.Property<int>("TechnicianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianID"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TechnicianID");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchaseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CouponRepresentative", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Coupon", null)
                        .WithMany()
                        .HasForeignKey("CouponsCouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Representative", null)
                        .WithMany()
                        .HasForeignKey("RepresentativesRepresentativeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponStoreKeeper", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Coupon", null)
                        .WithMany()
                        .HasForeignKey("CouponsCouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.StoreKeeper", null)
                        .WithMany()
                        .HasForeignKey("StoreKeepersStoreKeeperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponTechnician", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Coupon", null)
                        .WithMany()
                        .HasForeignKey("CouponsCouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Technician", null)
                        .WithMany()
                        .HasForeignKey("TechniciansTechnicianID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.AuditLog", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Admin", "Admin")
                        .WithMany("AuditLogs")
                        .HasForeignKey("AdminID");

                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Employee", "Employee")
                        .WithMany("AuditLogs")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Admin");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Coupon", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.CouponTemplate", null)
                        .WithMany("Coupons")
                        .HasForeignKey("CouponTemplateTemplateID");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Transaction", b =>
                {
                    b.HasOne("LoyaltyCouponsSystem.DAL.Entity.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Admin", b =>
                {
                    b.Navigation("AuditLogs");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.CouponTemplate", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Customer", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LoyaltyCouponsSystem.DAL.Entity.Employee", b =>
                {
                    b.Navigation("AuditLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
