@model List<LoyaltyCouponsSystem.BLL.ViewModel.Distributor.DistributorViewModel>

@{
    ViewData["Title"] = "All Distributors";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<div class="container mt-4">
    <h1 class="text-primary text-center"><b>All Distributors</b></h1>

    <!-- Search Filters and Add Button -->
    <div class="row mb-4 justify-content-center">
        <div class="col-md-8">
            <div class="input-group shadow-sm">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name, Code, Governorate, City, or Phone Number...">
                <a href="@Url.Action("AddDistributor", "Distributor")" class="btn btn-add-customer ms-2">
                    <i class="fas fa-plus"></i> Add New Distributor
                </a>
            </div>
        </div>
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table id="distributorTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
            <thead class="thead-dark bg-primary text-white">
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Phone Number</th>
                    <th>Governorate</th>
                    <th>City</th>
                    <th>Customers</th>
                    <th>Created By</th>
                    <th>Created At</th>
                    <th>Updated By</th>
                    <th>Updated At</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var distributor in Model)
                {
                    <tr id="row-@distributor.DistributorID">
                        <td>@distributor.Code</td>
                        <td>@distributor.Name</td>
                        <td>@distributor.PhoneNumber1</td>
                        <td>@distributor.SelectedGovernate</td>
                        <td>@distributor.SelectedCity</td>
                        <td>
                            @if (distributor.SelectedCustomerNames != null && distributor.SelectedCustomerNames.Any())
                            {
                                <!-- View Customers Button -->
                                <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#customersModal-@distributor.DistributorID">
                                    View Customers
                                </button>

                                <!-- Modal -->
                                <div class="modal fade" id="customersModal-@distributor.DistributorID" tabindex="-1" aria-labelledby="customersModalLabel-@distributor.DistributorID" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header bg-primary text-white">
                                                <h5 class="modal-title" id="customersModalLabel-@distributor.DistributorID">Customers of @distributor.Name</h5>
                                                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <!-- Search Box for Filtering Customers -->
                                                <div class="mb-3">
                                                    <input type="text" class="form-control" placeholder="Search Customers..." id="searchCustomers-@distributor.DistributorID" oninput="filterCustomers(@distributor.DistributorID)">
                                                </div>
                                                <!-- Customer List -->
                                                <ul id="customerList-@distributor.DistributorID" class="list-group">
                                                    @foreach (var customer in distributor.SelectedCustomerNames)
                                                    {
                                                        <li class="list-group-item">
                                                            @customer
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <span>No Customers</span>
                            }
                        </td>
                        <td>@distributor.CreatedBy</td>
                        <td>@distributor.CreatedAt</td>
                        <td>@distributor.UpdatedBy</td>
                        <td>@distributor.UpdatedAt</td>
                        <td>
                            <span class="badge @(distributor.IsActive ? "bg-success" : "bg-danger")">
                                @(distributor.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm @(distributor.IsActive ? "btn-danger" : "btn-success") toggle-activation"
                                    data-distributor-id="@distributor.DistributorID"
                                    data-is-active="@distributor.IsActive">
                                @(distributor.IsActive ? "Deactivate" : "Activate")
                            </button>
                            <span style="display: none;">DistributorID: @distributor.DistributorID</span>
                            <a href="@Url.Action("UpdateDistributor", "Distributor", new { id = distributor.DistributorID })" class="btn btn-outline-primary btn-sm me-2">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!-- Confirmation Modal for Toggle Activation -->
    <div class="modal fade" id="toggleConfirmationModal" tabindex="-1" aria-labelledby="toggleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="toggleModalLabel">Confirm Toggle Activation</h5>
                    <button type="button" class="btn-close text-dark" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to <span id="toggleAction">activate</span> this distributor?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="confirmToggleButton" class="btn btn-warning">Confirm</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Pagination Controls -->
    <div id="paginationContainer" class="mt-4 text-center"></div>
</div>


<style>
    /* Table Styling */
    .table {
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

        .table th {
            text-align: center;
            background-color: #007bff !important;
            color: #ffffff !important;
            font-weight: bold;
            padding: 12px;
            border-bottom: 2px solid #ffffff;
            text-transform: uppercase;
        }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    #searchBox {
        border-radius: 20px;
        padding: 10px;
        font-size: 16px;
        border: 2px solid #007bff;
        background-color: #f9f9f9;
        width: 75%;
    }

        #searchBox::placeholder {
            font-style: italic;
            color: #aaa;
        }

    .btn-add-customer {
        background-color: #007bff !important;
        color: white !important;
        font-weight: bold !important;
        border-radius: 30px !important;
        padding: 10px 20px !important;
    }

        .btn-add-customer:hover {
            background-color: #0056b3 !important;
            color: white !important;
        }

    h1 {
        font-family: 'Verdana', sans-serif;
        font-weight: bold;
        letter-spacing: 1px;
    }

    .d-flex {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    #paginationContainer .btn {
        font-size: 14px;
        padding: 8px 12px;
        border-radius: 6px;
        cursor: pointer;
    }

    #paginationContainer .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
    }

    #paginationContainer .btn-outline-primary {
        border: 1px solid #007bff;
        color: #007bff;
        background-color: white;
    }

    #paginationContainer .btn:hover {
        opacity: 0.8;
    }

    .modal-content {
        border-radius: 10px;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
    }

    .modal.fade .modal-dialog {
        transition: transform 0.3s ease-out, opacity 0.3s ease-out;
        transform: translateY(-50px);
        opacity: 0;
    }

    .modal.show .modal-dialog {
        transform: translateY(0);
        opacity: 1;
    }

    .modal-header {
        font-family: 'Verdana', sans-serif;
        font-weight: bold;
        text-transform: uppercase;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Toggle Activation Functionality for Distributor
            document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".toggle-activation").forEach(button => {
            button.addEventListener("click", function () {
                const distributorId = this.getAttribute("data-distributor-id");
                const isActive = this.getAttribute("data-is-active") === "True";

            // Call API to toggle activation status
                fetch('/Distributor/ToggleActivation?distributorId=' + distributorId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })

                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const row = document.getElementById(`row-${distributorId}`);
                        const statusBadge = row.querySelector(".badge");
                        const toggleButton = row.querySelector(".toggle-activation");

                        // Update UI dynamically
                        if (data.isActive) {
                            statusBadge.textContent = "Active";
                            statusBadge.classList.remove("bg-danger");
                            statusBadge.classList.add("bg-success");

                            toggleButton.textContent = "Deactivate";
                            toggleButton.classList.remove("btn-success");
                            toggleButton.classList.add("btn-danger");
                        } else {
                            statusBadge.textContent = "Inactive";
                            statusBadge.classList.remove("bg-success");
                            statusBadge.classList.add("bg-danger");

                            toggleButton.textContent = "Activate";
                            toggleButton.classList.remove("btn-danger");
                            toggleButton.classList.add("btn-success");
                        }

                        toggleButton.setAttribute("data-is-active", data.isActive.toString());
                    } else {
                        alert(data.message || "Failed to toggle activation.");
                    }
                })
                .catch(error => {
                    console.error("Error toggling activation:", error);
                    alert("An error occurred. Please try again.");
                });
            });
        });
    });


</script>
