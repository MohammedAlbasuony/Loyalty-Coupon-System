@model LoyaltyCouponsSystem.BLL.ViewModel.Distributor.DistributorViewModel

@{
    ViewData["Title"] = "Add Distributor";

    // Simplify customer data to just 'Code' and 'Name'
    var simplifiedCustomers = Model.Customers.Select(c => new
    {
        Code = c.Value,
        Name = c.Text
    }).ToList();
}

<div class="container mt-5">
    <!-- Header Section -->
    <div class="text-center mb-4">
        <h1 class="display-5 text-primary"><b>Add Distributor</b></h1>
        <p class="lead text-secondary">Easily add a new distributor and assign customers dynamically.</p>
    </div>

    <!-- Form Section -->
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form asp-action="AddDistributor" method="post" id="addDistributorForm" class="shadow-lg p-4 bg-white rounded">
                <!-- Validation Summary -->
                <div asp-validation-summary="All" class="text-danger mb-3"></div>

                <!-- Code -->
                <div class="form-group mb-3">
                    <label asp-for="Code" class="form-label text-primary"><b>Code <span class="text-danger">*</span></b></label>
                    <input asp-for="Code" class="form-control" placeholder="Enter distributor code" required />
                </div>

                <!-- Name -->
                <div class="form-group mb-3">
                    <label asp-for="Name" class="form-label text-primary"><b>Name <span class="text-danger">*</span></b></label>
                    <input asp-for="Name" class="form-control" placeholder="Enter distributor name" required />
                </div>

                <!-- Phone Number -->
                <div class="form-group mb-3">
                    <label asp-for="PhoneNumber1" class="form-label text-primary"><b>Phone Number <span class="text-danger">*</span></b></label>
                    <input asp-for="PhoneNumber1" class="form-control" placeholder="Enter phone number" required />
                </div>

                <!-- Governate -->
                <div class="form-group mb-3">
                    <label asp-for="SelectedGovernate" class="form-label text-primary"><b>Governate</b></label>
                    <select asp-for="SelectedGovernate" asp-items="Model.Governates" class="form-select" id="governate">
                        <option value="" disabled selected>Choose a Governate</option>
                        @foreach (var governate in Model.Governates)
                        {
                            <option value="@governate.Value">@governate.Text</option>
                        }
                    </select>
                </div>

                <!-- City -->
                <div class="form-group mb-3">
                    <label asp-for="SelectedCity" class="form-label text-primary"><b>City</b></label>
                    <select asp-for="SelectedCity" class="form-select" id="city" disabled>
                        <option value="" disabled selected>Choose a City</option>
                    </select>
                </div>

                <!-- Dynamically added customer dropdowns will appear here -->
                <h3>Customers</h3>
                <div id="customerContainer" class="form-group">
                    <label asp-for="SelectedCustomerCode">Select Customer</label>
                    <select asp-for="SelectedCustomerCode" asp-items="Model.Customers" class="form-control select2" aria-label="Select Customer">
                        <option value="">Select Customer</option>
                    </select>
                </div>

                <!-- Button to Add New Customer -->
                <button type="button" class="btn btn-secondary" id="addCustomerButton">Add New Customer</button>

                <!-- Submit Button -->
                <div class="text-center">
                    <button type="submit" class="btn btn-primary px-5">
                        <i class="fas fa-save"></i> Add Distributor
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Scripts Section -->
@section Scripts {
    <script>
        debugger;
         // Serialize the Model.Customers data into JavaScript for use in the script
         const customers = @Html.Raw(Json.Serialize(Model.Customers));

         // Log customers to the console for debugging
         console.log("Customers data:", customers);

         let customerIndex = 1; // Initialize customer index for dynamic dropdowns

         // Add a new customer dropdown dynamically
         document.getElementById("addCustomerButton").addEventListener("click", function () {
             const container = document.getElementById("customerContainer");

             // Create a new div to contain the new customer dropdown
             const newFields = document.createElement("div");
             newFields.classList.add("customerFields", "mt-3");

             // Check if customers is an array and contains the expected data
             if (Array.isArray(customers) && customers.length > 0) {
                 let options = `<option value="">Select Customer</option>`;

                 // Iterate over the customers array and add each customer as an option
                 customers.forEach(customer => {
                     if (customer.text && customer.value) {
                         options += `<option value="${customer.value}">${customer.text}</option>`;
                     } else {
                         console.error("Invalid customer data:", customer);
                     }
                 });

                 // Set the innerHTML with the options
                 newFields.innerHTML = `
                     <div class="form-group">
                         <label for="SelectedCustomerCode_${customerIndex}">Select Customer</label>
                         <select name="Customers[${customerIndex}].Code" class="form-control select2" id="SelectedCustomerCode_${customerIndex}" aria-label="Select Customer">
                             ${options}
                         </select>
                     </div>`;

                 // Append the new customer dropdown field to the container
                 container.appendChild(newFields);

                 // Increment the customer index for the next customer
                 customerIndex++;

                 // Re-initialize Select2 for the newly added dropdown
                 $('.select2').select2({
                     placeholder: 'Select Customer',
                     allowClear: true
                 });
             } else {
                 console.error("No customers data available or invalid format.");
             }
         });

         // Initialize Select2 for the existing customer dropdown
         $(document).ready(function () {
             $('.select2').select2({
                 placeholder: 'Select Customer',
                 allowClear: true
             });
         });

        // Initialize Select2 for customer dropdown
        $(document).ready(function () {
            $('.select2').select2({
                placeholder: 'Select Customer',
                allowClear: true
            });
        });
    </script>
    <script>
            const citiesByGovernate = {
            Cairo: ["Nasr City", "Heliopolis", "Maadi", "New Cairo"],
            Alexandria: ["Montaza", "Sidi Gaber", "Smouha"],
            Giza: ["Dokki", "Haram", "6th of October"],
            Dakahlia: ["Mansoura", "Mit Ghamr", "Talkha"],
            "Red Sea": ["Hurghada", "Safaga", "El Qoseir"],
            Beheira: ["Damanhour", "Rashid", "Kafr El-Dawwar"],
            Fayoum: ["Fayoum City", "Tamiya", "Ibsheway"],
            Sharqia: ["Zagazig", "Belbeis", "10th of Ramadan City"],
            Aswan: ["Aswan City", "Kom Ombo", "Edfu"],
            Assiut: ["Assiut City", "Manfalut", "Dayrout"],
            "Beni Suef": ["Beni Suef City", "Nasser", "Ihnasya"],
            "Port Said": ["Port Said City"],
            Suez: ["Suez City"],
            Matruh: ["Marsa Matruh", "Siwa", "Alamein"],
            Qalyubia: ["Banha", "Shubra El-Kheima", "Qalyub"],
            Gharbia: ["Tanta", "El-Mahalla", "Kafr El-Zayat"],
            Monufia: ["Shebin El-Kom", "Sadat City", "Menouf"],
            Qena: ["Qena City", "Nag Hammadi", "Qus"],
            "North Sinai": ["Arish", "Sheikh Zuweid", "Rafah"],
            Sohag: ["Sohag City", "Tahta", "Akhmim"],
            "South Sinai": ["Sharm El-Sheikh", "Dahab", "Taba"],
            "Kafr El Sheikh": ["Kafr El Sheikh City", "Desouk", "Balteem"],
            Damietta: ["Damietta City", "Ras El Bar", "New Damietta"],
            Ismailia: ["Ismailia City", "Fayed", "Qantara"],
            Luxor: ["Luxor City", "Armant", "Esna"],
            "New Valley": ["Kharga", "Dakhla", "Farafra"]
        };


        document.getElementById("governate").addEventListener("change", function () {
            const governate = this.value;
            const citySelect = document.getElementById("city");

            citySelect.innerHTML = '<option value="" disabled selected>Choose a City</option>';

            if (governate && citiesByGovernate[governate]) {
                citySelect.disabled = false;
                citiesByGovernate[governate].forEach(city => {
                    const option = document.createElement("option");
                    option.value = city;
                    option.textContent = city;
                    citySelect.appendChild(option);
                });
            } else {
                citySelect.disabled = true;
            }
        });
        </script>
        

    <!-- Include Select2 CSS and JS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
}

<style>
    .form-control, .form-select {
        border-radius: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-size: 16px;
        padding: 10px 15px;
    }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);
        }

    .btn-primary {
        background-color: #007bff;
        border-radius: 30px;
        font-weight: bold;
        font-size: 16px;
    }

    .btn-outline-secondary {
        border-radius: 30px;
    }

    label {
        font-weight: bold;
    }
</style>
