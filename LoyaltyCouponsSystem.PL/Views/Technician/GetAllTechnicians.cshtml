@using LoyaltyCouponsSystem.BLL.ViewModel.Technician
@model List<TechnicianViewModel>

@{
    ViewData["Title"] = "All Technicians";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<div class="container mt-4">
    <h1 class="text-primary text-center"><b>All Technicians</b></h1>

    <!-- Search Filters and Add Button -->
    <div class="row mb-4 justify-content-center">
        <div class="col-md-10">
            <div class="input-group shadow-sm">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name, Code, Governorate, City, or Phone Number...">
                <a href="@Url.Action("AddTechnician", "Technician")" class="btn btn-add-entity ms-2">
                    <i class="fas fa-plus"></i> Add New Technician
                </a>
            </div>
        </div>
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table id="technicianTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
            <thead class="thead-dark bg-primary text-white">
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Nickname</th>
                    <th>National ID</th>
                    <th>Governorate</th>
                    <th>City</th>
                    <th>Phone Numbers</th>
                    <th>Created By/At - Updated By/At</th>
                    <th>Status</th>
                    <th>Actions</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var technician in Model)
                {
                    <tr id="row-@technician.TechnicianID">
                        <td>@technician.Code</td>
                        <td>@technician.Name</td>
                        <td>@technician.NickName</td>
                        <td>@technician.NationalID</td>
                        <td>@technician.SelectedGovernate</td>
                        <td>@technician.SelectedCity</td>
                        <td>
                            <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#phoneNumbersModal-@technician.TechnicianID">
                                View Phone Numbers
                            </button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#createdUpdatedModal-@technician.TechnicianID">
                                View Created/Updated Info
                            </button>
                        </td>
                        <td>
                            <span class="badge @(technician.IsActive ? "bg-success" : "bg-danger")">
                                @(technician.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td>
                            <button class="btn btn-sm @(technician.IsActive ? "btn-danger" : "btn-success") toggle-activation"
                                    data-technician-id="@technician.TechnicianID"
                                    data-is-active="@technician.IsActive">
                                @(technician.IsActive ? "Deactivate" : "Activate")
                            </button>

                            <a href="@Url.Action("UpdateTechnician", "Technician", new { id = technician.TechnicianID })" class="btn btn-outline-primary btn-sm">
                                Edit
                            </a>
                        </td>

                        <td>
                            <button type="button" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#customersModal-@technician.TechnicianID">
                                View Customers
                            </button>
                            <button type="button" class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#usersModal-@technician.TechnicianID">
                                View Representatives
                            </button>
                        </td>
                    </tr>

                    <!-- Modals for Assigned Customers and Users -->
                    <div class="modal fade" id="customersModal-@technician.TechnicianID" tabindex="-1" aria-labelledby="customersModalLabel-@technician.TechnicianID" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="customersModalLabel-@technician.TechnicianID">Assigned Customers</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <ul>
                                        @foreach (var customer in technician.SelectedCustomerNames)
                                        {
                                            <li>@customer</li>
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" id="usersModal-@technician.TechnicianID" tabindex="-1" aria-labelledby="usersModalLabel-@technician.TechnicianID" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="usersModalLabel-@technician.TechnicianID">Assigned Users</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <ul>
                                        @foreach (var user in technician.SelectedUserNames)
                                        {
                                            <li>@user</li>
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Modal for Phone Numbers -->
                    <div class="modal fade" id="phoneNumbersModal-@technician.TechnicianID" tabindex="-1" aria-labelledby="phoneNumbersModalLabel-@technician.TechnicianID" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="phoneNumbersModalLabel-@technician.TechnicianID">Phone Numbers</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <ul>
                                        <li>Phone Number 1: @technician.PhoneNumber1</li>
                                        <li>Phone Number 2: @technician.PhoneNumber2</li>
                                        <li>Phone Number 3: @technician.PhoneNumber3</li>
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Modal for Created/Updated Info -->
                    <div class="modal fade" id="createdUpdatedModal-@technician.TechnicianID" tabindex="-1" aria-labelledby="createdUpdatedModalLabel-@technician.TechnicianID" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="createdUpdatedModalLabel-@technician.TechnicianID">Created & Updated Information</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p><strong>Created By:</strong> @technician.CreatedBy</p>
                                    <p><strong>Created At:</strong> @technician.CreatedAt</p>
                                    <p><strong>Updated By:</strong> @technician.UpdatedBy</p>
                                    <p><strong>Updated At:</strong> @technician.UpdatedAt</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </tbody>
        </table>
    </div>

    <!-- Modal for confirmation -->
    <div class="modal fade" id="toggleConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="toggleConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="toggleConfirmationModalLabel">Confirm Action</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to <span id="toggleAction"></span> this technician?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmToggleButton">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination Container -->
    <div id="paginationContainer" class="mt-4 text-center"></div>
</div>

<style>

    /* General Styling */
    body {
        font-family: Arial, sans-serif;
    }

    h1 {
        font-family: 'Verdana', sans-serif;
        font-weight: bold;
        font-size: 24px;
        color: #007bff;
    }

    /* Table Styling */
    .table-responsive {
        padding: 0;
        margin: 0 auto;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        table-layout: auto;
        text-align: center;
    }

        .table th,
        .table td {
            vertical-align: middle;
            padding: 12px;
            font-size: 14px;
            white-space: nowrap; /* Ensure data remains on one line */
        }

        .table th {
            background-color: #007bff !important;
            color: #ffffff !important;
            font-weight: bold;
            text-transform: uppercase;
        }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    /* Button Styling */
    .btn-add-entity {
        background-color: #007bff !important;
        color: white !important;
        font-weight: bold !important;
        border-radius: 30px !important;
        padding: 10px 20px !important;
        text-decoration: none !important;
        text-align: center !important;
        display: inline-block !important;
    }

        .btn-add-entity:hover {
            background-color: #0056b3;
            color: white !important;
        }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    /* Search Box Styling */
    #searchBox {
        border-radius: 30px;
        padding: 12px 20px;
        font-size: 16px;
        border: 2px solid #007bff;
        background-color: #f9f9f9;
        flex: 1;
    }

        #searchBox::placeholder {
            font-style: italic;
            color: #aaa;
        }

    /* Pagination Buttons */
    #paginationContainer .btn {
        font-size: 14px;
        padding: 8px 12px;
        margin: 2px;
    }

    #paginationContainer .btn-primary {
        background-color: #007bff;
        color: white;
    }

    #paginationContainer .btn-outline-primary {
        border: 1px solid #007bff;
        color: #007bff;
        background-color: white;
    }

    /* Responsive Design */
    @@media screen and (max-width: 768px) {
        .table th, .table td

    {
        font-size: 12px;
        padding: 6px;
    }

    .btn {
        font-size: 12px;
        padding: 6px 10px;
    }

    #searchBox {
        font-size: 14px;
        padding: 8px 12px;
    }
        /* General Styling for Title */
        h1 {
            font-family: 'Verdana', sans-serif;
            font-weight: bold;
            font-size: 24px;
            color: #007bff;
        }

</style>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap JS (includes Popper.js for modal handling) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
         $(document).ready(function () {
        // Ensure that the data-is-active attribute is correctly set after page reload
        $('#technicianTable tbody tr').each(function () {
            const technicianId = $(this).attr('id').split('-')[1];
            const statusBadge = $(this).find('.badge');
            const toggleButton = $(this).find('.toggle-activation');
            const isActive = toggleButton.data('is-active');

            // Update badge and button state according to the technician's active status
            if (isActive) {
                statusBadge.text("Active").removeClass("bg-danger").addClass("bg-success");
                toggleButton.text("Deactivate").removeClass("btn-success").addClass("btn-danger");
            } else {
                statusBadge.text("Inactive").removeClass("bg-success").addClass("bg-danger");
                toggleButton.text("Activate").removeClass("btn-danger").addClass("btn-success");
            }
        });
    });

    // Handle toggle activation on button click
    $(document).on('click', '.toggle-activation', function () {
        const technicianId = $(this).data('technician-id');
        const isActive = $(this).data('is-active');
        const action = isActive ? 'Deactivate' : 'Activate';

        // Show the confirmation modal with the action text
        $('#toggleAction').text(action);

        // Store the technicianId and isActive in a global variable
        $('#confirmToggleButton').off('click').on('click', function () {
            // Change the UI immediately after confirmation
            toggleActivation(technicianId, !isActive);

            // Close the modal
            $('#toggleConfirmationModal').modal('hide');
        });

        // Show confirmation modal
        $('#toggleConfirmationModal').modal('show');
    });

    // Toggle technician activation (send to server)
    function toggleActivation(technicianId, newIsActive) {
        console.log("Toggling activation for Technician ID:", technicianId, "New Active Status:", newIsActive);

        // Make a POST request to toggle the technician's activation status
        fetch(`/Technician/ToggleActivation?technicianId=${technicianId}&isActive=${newIsActive}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log('Activation status updated successfully');

                // After success, update the button state to match the server's state
                const row = $(`#row-${technicianId}`);
                const statusBadge = row.find('.badge');
                const toggleButton = row.find('.toggle-activation');

                if (newIsActive) {
                    statusBadge.text("Active").removeClass("bg-danger").addClass("bg-success");
                    toggleButton.text("Deactivate").removeClass("btn-success").addClass("btn-danger");
                    toggleButton.data('is-active', true);
                } else {
                    statusBadge.text("Inactive").removeClass("bg-success").addClass("bg-danger");
                    toggleButton.text("Activate").removeClass("btn-danger").addClass("btn-success");
                    toggleButton.data('is-active', false);
                }
            } else {
                alert('Failed to toggle activation.');
            }
        })
        .catch(error => alert('Error: ' + error));
    }



    // Pagination functionality
    document.addEventListener("DOMContentLoaded", function () {
        const rowsPerPage = 10;
        const tableBody = document.querySelector("#technicianTable tbody");
        const paginationContainer = document.createElement("div");
        paginationContainer.id = "paginationContainer";
        paginationContainer.classList.add("mt-4", "text-center");
        tableBody.parentElement.parentElement.appendChild(paginationContainer);

        function showPage(pageNumber) {
            const rows = Array.from(tableBody.querySelectorAll("tr"));
            const totalRows = rows.length;
            const totalPages = Math.ceil(totalRows / rowsPerPage);

            rows.forEach((row, index) => {
                row.style.display = (index >= (pageNumber - 1) * rowsPerPage && index < pageNumber * rowsPerPage) ? "" : "none";
            });

            updatePaginationControls(pageNumber, totalPages);
        }

        function updatePaginationControls(currentPage, totalPages) {
            paginationContainer.innerHTML = "";
            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.classList.add("btn", "btn-outline-primary", "me-2");
                button.textContent = i;
                button.onclick = () => showPage(i);
                if (i === currentPage) {
                    button.classList.add("active");
                }
                paginationContainer.appendChild(button);
            }
        }

        showPage(1); // Initialize with first page
    });
</script>