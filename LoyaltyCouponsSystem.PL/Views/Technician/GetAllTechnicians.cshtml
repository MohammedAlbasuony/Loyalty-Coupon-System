@using LoyaltyCouponsSystem.BLL.ViewModel.Technician
@model List<TechnicianViewModel>

@{
    ViewData["Title"] = "All Technicians";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<div class="container mt-4">
    <!-- Backward Button -->
    <div class="mb-3">
        <a href="@Url.Action("Index", "Technician")" class="btn btn-custom-backward">
            <i class="fas fa-arrow-left"></i> Back
        </a>
    </div>

    <b><h1 class="text-primary text-center">All Technicians</h1></b>

    <!-- Search Filters -->
    <div class="row mb-4 justify-content-center">
        <div class="col-md-8">
            <div class="input-group shadow-sm">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name, Code, NickName, National ID, Governorate, or City...">
            </div>
        </div>
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table id="technicianTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
            <thead class="thead-dark bg-primary text-white">
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>NickName</th>
                    <th>National ID</th>
                    <th>Governorate</th>
                    <th>City</th>
                    <th>Phone Number</th>
                    <th>Created By</th>
                    <th>Created At</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var technician in Model)
                {
                    <tr id="row-@technician.Code">
                        <td>@technician.Code</td>
                        <td>@technician.Name</td>
                        <td>@technician.NickName</td>
                        <td>@technician.NationalID</td>
                        <td>@technician.SelectedGovernate</td>
                        <td>@technician.SelectedCity</td>
                        <td>@technician.PhoneNumber1</td>
                        <td>@technician.CreatedBy</td>
                        <td>@technician.CreatedAt</td>
                        <td>
                            <a href="@Url.Action("UpdateTechnician", "Technician", new { id = technician.Code })" class="btn btn-outline-primary btn-sm me-2">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <br /><br />
                            <button class="btn btn-outline-danger btn-sm" onclick="confirmDelete('@technician.Code')">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this technician?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteButton" class="btn btn-danger" onclick="deleteTechnician()">Delete</button>
            </div>
        </div>
    </div>
</div>

<style>
    .border-light-modern {
        border: 3px solid #007bff !important;
        border-radius: 12px;
        padding: 15px;
        background-color: #f9f9f9;
    }

    .table {
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

        .table th {
            text-align: center;
            background-color: #007bff !important;
            color: #ffffff !important;
            font-weight: bold;
            padding: 12px;
            border-bottom: 2px solid #ffffff;
            text-transform: uppercase;
        }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    #searchBox {
        border-radius: 20px;
        padding: 10px;
        font-size: 16px;
        width: 100%;
        border: 2px solid #007bff;
        background-color: #f9f9f9;
        padding-left: 35px;
        position: relative;
    }

        #searchBox::placeholder {
            font-style: italic;
            color: #aaa;
        }

    .btn-custom-backward {
        font-size: 14px;
        padding: 8px 20px;
        font-weight: bold;
        display: inline-flex;
        align-items: center;
        border: 2px solid #007bff;
        color: #007bff;
        border-radius: 30px;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .btn-custom-backward i {
            margin-right: 5px;
        }

        .btn-custom-backward:hover {
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
        }

    h1 {
        font-weight: bold;
        letter-spacing: 1px;
    }
</style>

<script>
    let deleteTechnicianId = null;

    // Confirmation Modal
    function confirmDelete(technicianCode) {
        deleteTechnicianId = technicianCode;
        const deleteModal = new bootstrap.Modal(document.getElementById("deleteConfirmationModal"));
        deleteModal.show();
    }

    // AJAX Delete Functionality
    function deleteTechnician() {
        if (deleteTechnicianId) {
            fetch(`/Technician/DeleteTechnician/${deleteTechnicianId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    const row = document.getElementById(`row-${deleteTechnicianId}`);
                    if (row) row.remove();
                } else {
                    alert("Failed to delete technician.");
                }
            })
            .catch(error => console.error('Error deleting technician:', error));
        }
        const deleteModal = bootstrap.Modal.getInstance(document.getElementById("deleteConfirmationModal"));
        deleteModal.hide();
    }

    // Search Functionality
    document.getElementById("searchBox").addEventListener("input", function () {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll("#technicianTable tbody tr");

        rows.forEach(row => {
            const cells = Array.from(row.children);
            const isVisible = cells.some(cell => cell.textContent.toLowerCase().includes(searchValue));
            row.style.display = isVisible ? "" : "none";
        });
    });
</script>
