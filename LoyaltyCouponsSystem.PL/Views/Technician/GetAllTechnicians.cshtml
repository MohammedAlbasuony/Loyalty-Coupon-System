@using LoyaltyCouponsSystem.BLL.ViewModel.Technician
@model List<TechnicianViewModel>

@{
    ViewData["Title"] = "All Technicians";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<div class="container mt-4">

    <h1 class="text-primary text-center"><b>All Technicians</b></h1>

    <!-- Search Filters -->
    <div class="row mb-4 justify-content-center">
        <div class="col-md-8">
            <div class="input-group shadow-sm">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name, Code, NickName, National ID, Governorate, or City...">
            </div>
        </div>
    </div>

    
    <!-- Table -->
    <div class="table-responsive">
        <table id="technicianTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
            <thead class="thead-dark bg-primary text-white">
                <tr>
                    <th>Code</th>
                    <th>Name</th>
                    <th>NickName</th>
                    <th>National ID</th>
                    <th>Governorate</th>
                    <th>City</th>
                    <th>Phone Number</th>
                    <th>Created By</th>
                    <th>Created At</th>
                    <th>Actions</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var technician in Model)
                {
                    <tr id="row-@technician.Code">
                        <td>@technician.Code</td>
                        <td>@technician.Name</td>
                        <td>@technician.NickName</td>
                        <td>@technician.NationalID</td>
                        <td>@technician.SelectedGovernate</td>
                        <td>@technician.SelectedCity</td>
                        <td>@technician.PhoneNumber1</td>
                        <td>@technician.CreatedBy</td>
                        <td>@technician.CreatedAt</td>
                        <td>
                            <a href="@Url.Action("UpdateTechnician", "Technician", new { id = technician.Code })" class="btn btn-outline-primary btn-sm me-2">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <br /><br />
                            <button class="btn btn-outline-danger btn-sm" onclick="confirmDelete('@technician.Code')">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </td>
                        <td>
                            <!-- Button to trigger Assigned Customers modal -->
                            <button type="button" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#customersModal-@technician.Code">
                                View  Customers
                            </button>
                            <br /> <br />    
                            <!-- Button to trigger Assigned Users modal -->
                            <button type="button" class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#usersModal-@technician.Code">
                                View  Representatiives
                            </button>
                        </td>
                    </tr>

                    <!-- Modals for Assigned Customers and Users -->
                    <tr>
                        <td colspan="10">
                            <!-- Modal for Assigned Customers -->
                            <div class="modal fade" id="customersModal-@technician.Code" tabindex="-1" aria-labelledby="customersModalLabel-@technician.Code" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="customersModalLabel-@technician.Code">Assigned Customers</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <ul>
                                                @foreach (var customer in technician.SelectedCustomerNames)
                                                {
                                                    <li>@customer</li>
                                                }
                                            </ul>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Modal for Assigned Users -->
                            <div class="modal fade" id="usersModal-@technician.Code" tabindex="-1" aria-labelledby="usersModalLabel-@technician.Code" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="usersModalLabel-@technician.Code">Assigned Users</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <ul>
                                                @foreach (var user in technician.SelectedUserNames)
                                                {
                                                    <li>@user</li>
                                                }
                                            </ul>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this technician?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteButton" class="btn btn-danger" onclick="deleteTechnician()">Delete</button>
            </div>
        </div>
    </div>
</div>

<style>
    .border-light-modern {
        border: 3px solid #007bff !important;
        border-radius: 12px;
        padding: 15px;
        background-color: #f9f9f9;
    }

    .table {
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

        .table th {
            text-align: center;
            background-color: #007bff !important;
            color: #ffffff !important;
            font-weight: bold;
            padding: 12px;
            border-bottom: 2px solid #ffffff;
            text-transform: uppercase;
        }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    #searchBox {
        border-radius: 20px;
        padding: 10px;
        font-size: 16px;
        width: 100%;
        border: 2px solid #007bff;
        background-color: #f9f9f9;
        padding-left: 35px;
        position: relative;
    }

        #searchBox::placeholder {
            font-style: italic;
            color: #aaa;
        }

    
    h1 {
        font-weight: bold;
        letter-spacing: 1px;
    }
</style>

<script>
        function addCustomer(technicianCode) {
        const input = document.getElementById(`addCustomerInput-${technicianCode}`);
        const customerName = input.value.trim();

        if (customerName) {
            // Add the customer to the list
            const list = document.getElementById(`customerList-${technicianCode}`);
            const newItem = document.createElement('li');
            newItem.id = `customer-${customerName}`;
            newItem.innerHTML = `${customerName}
                <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeCustomer('${technicianCode}', '${customerName}')">
                    Remove
                </button>`;
            list.appendChild(newItem);

            // Clear the input field
            input.value = '';

            // TODO: Send an AJAX request to update the backend
        } else {
            alert('Please enter a customer name.');
        }
    }

    function removeCustomer(technicianCode, customerName) {
        const item = document.getElementById(`customer-${customerName}`);
        if (item) {
            item.remove();

            // TODO: Send an AJAX request to update the backend
        }
    }

    function addUser(technicianCode) {
        const input = document.getElementById(`addUserInput-${technicianCode}`);
        const userName = input.value.trim();

        if (userName) {
            // Add the user to the list
            const list = document.getElementById(`userList-${technicianCode}`);
            const newItem = document.createElement('li');
            newItem.id = `user-${userName}`;
            newItem.innerHTML = `${userName}
                <button type="button" class="btn btn-danger btn-sm ms-2" onclick="removeUser('${technicianCode}', '${userName}')">
                    Remove
                </button>`;
            list.appendChild(newItem);

            // Clear the input field
            input.value = '';

            // TODO: Send an AJAX request to update the backend
        } else {
            alert('Please enter a user name.');
        }
    }

    function removeUser(technicianCode, userName) {
        const item = document.getElementById(`user-${userName}`);
        if (item) {
            item.remove();

            // TODO: Send an AJAX request to update the backend
        }
    }



    let deleteTechnicianId = null;

    // Confirmation Modal
    function confirmDelete(technicianCode) {
        deleteTechnicianId = technicianCode;
        const deleteModal = new bootstrap.Modal(document.getElementById("deleteConfirmationModal"));
        deleteModal.show();
    }

    // AJAX Delete Functionality
    function deleteTechnician() {
        if (deleteTechnicianId) {
            fetch(`/Technician/DeleteTechnician/${deleteTechnicianId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    const row = document.getElementById(`row-${deleteTechnicianId}`);
                    if (row) row.remove();
                } else {
                    alert("Failed to delete technician.");
                }
            })
            .catch(error => console.error('Error deleting technician:', error));
        }
        const deleteModal = bootstrap.Modal.getInstance(document.getElementById("deleteConfirmationModal"));
        deleteModal.hide();
    }

    // Search Functionality
    document.getElementById("searchBox").addEventListener("input", function () {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll("#technicianTable tbody tr");

        rows.forEach(row => {
            const cells = Array.from(row.children);
            const isVisible = cells.some(cell => cell.textContent.toLowerCase().includes(searchValue));
            row.style.display = isVisible ? "" : "none";
        });
    });
</script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
