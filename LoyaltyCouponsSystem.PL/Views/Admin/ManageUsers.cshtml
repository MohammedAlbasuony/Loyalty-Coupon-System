@model LoyaltyCouponsSystem.BLL.ViewModel.Admin.ManageUsersViewModel

@{
    ViewData["Title"] = "Manage Users";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

@*<h1>Manage Users</h1>*@

@if (User.IsInRole("SuperAdmin"))
{
    <div class="container mt-4">
        <b><h1 class="text-primary text-center">Manage Users</h1></b>
        <br />
        <div class="row mb-4 justify-content-center">
            <div class="col-md-8">
                <div class="input-group shadow-sm">
                    <input type="text" id="searchBox" class="form-control" placeholder="Search ...">
                </div>
            </div>
        </div>
        <div class="table-responsive mt-4">
            <table id="usersTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
                <thead class="thead-dark bg-primary text-white">
                    <tr>
                        <th>Username</th>
                        <th>National ID</th>
                        <th>Phone Number</th>
                        <th>Optional Phone</th>
                        <th>Governorate</th>
                        <th>City</th>
                        <th>Current Role</th>
                        <th>Status</th>
                        <th>Assign Role</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.ConfirmedUsers)
                    {
                        if (user.Role.Equals("SuperAdmin", StringComparison.OrdinalIgnoreCase))
                        {
                            continue; // Skip the row entirely
                        }
                        <tr class="@(user.IsActive ? "" : "inactive")">
                            <td>@user.UserName</td>
                            <td>@user.NationalID</td>
                            <td>@user.PhoneNumber</td>
                            <td>@(string.IsNullOrEmpty(user.OptionalPhoneNumber) ? "N/A" : user.OptionalPhoneNumber)</td>
                            <td>@user.Governorate</td>
                            <td>@user.City</td>
                            <td>@user.Role</td>
                            <td>
                                <span class="badge @(user.IsActive ? "bg-success" : "bg-danger")">
                                    @(user.IsActive ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <form asp-action="AssignRole" asp-controller="Admin" method="post" class="action-form">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="roleName" class="form-select action-dropdown">
                                        <option disabled selected>Select Role</option>
                                        @foreach (var role in Model.AllRoles)
                                        {
                                            <option value="@role">@role</option>
                                        }
                                    </select>
                                    <button type="button" class="btn btn-primary btn-sm shadow assign-btn" onclick="confirmAssignRole('@user.UserName', this.form)">
                                        Assign Role
                                    </button>
                                </form>
                            </td>
                            <td>
                                <form asp-action="ToggleActivation" asp-controller="Admin" method="post" class="action-form">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <button type="button" class="btn btn-sm toggle-btn shadow"
                                            onclick="toggleActivation(this, '@user.UserName', this.form)"
                                            data-status="@user.IsActive">
                                        @(user.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }

                    @foreach (var user in Model.UnconfirmedUsers)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.NationalID</td>
                            <td>@user.PhoneNumber</td>
                            <td>@(string.IsNullOrEmpty(user.OptionalPhoneNumber) ? "N/A" : user.OptionalPhoneNumber)</td>
                            <td>@user.Governorate</td>
                            <td>@user.City</td>
                            <td>@user.Role</td>
                            <td><span class="badge bg-warning text-white">Pending</span></td>
                            <td>
                                <form asp-action="AssignRole" asp-controller="Admin" method="post" class="action-form">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <select name="roleName" class="form-select action-dropdown">
                                        <option disabled selected>Select Role</option>
                                        @foreach (var role in Model.AllRoles)
                                        {
                                            <option value="@role">@role</option>
                                        }
                                    </select>
                                    <button type="button" class="btn btn-primary btn-sm shadow assign-btn" onclick="confirmAssignRole('@user.UserName', this.form)">
                                        Assign Role
                                    </button>
                                </form>
                            </td>
                            <td>
                                <form asp-action="ConfirmAccount" asp-controller="Admin" method="post" class="action-form">
                                    <input type="hidden" name="userId" value="@user.Id" />
                                    <button type="button" class="btn btn-warning btn-sm shadow confirm-btn" onclick="confirmAccount('@user.UserName', this.form)">
                                        Confirm Account
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



    </div>




    <!-- Confirmation Modals -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow">
                <div class="modal-header bg-gradient-primary text-white">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                    <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center" id="confirmationModalBody">
                    <!-- Content updated dynamically via JavaScript -->
                </div>
                <div class="modal-footer justify-content-start">
                    <button type="button" class="btn btn-danger btn-lg px-4 py-2" id="confirmActionButton">
                        <i class="fas fa-check-circle"></i> Confirm
                    </button>
                    <button type="button" class="btn btn-secondary btn-lg px-4 py-2 ms-2" data-bs-dismiss="modal">
                        <i class="fas fa-times-circle"></i> Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>

}
else
{
    <div class="alert alert-danger" role="alert">
        You do not have permission to view this page.
    </div>
}


<style>
    .table {
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

        .table th {
            text-align: center;
            background-color: #007bff !important;
            color: #ffffff !important;
            font-weight: bold;
            padding: 12px;
            text-transform: uppercase;
        }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    h1 {
        font-weight: bold;
        letter-spacing: 1px;
    }

    .modal-content {
        border-radius: 15px;
        background: #f9f9f9;
    }

    .modal-header {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
        font-weight: bold;
    }

    .modal-body {
        font-size: 18px;
        color: #333;
        padding: 20px 30px;
    }

    .modal-footer {
        border-top: none;
        padding: 20px 30px;
    }

    .btn-danger {
        background-color: #ff4d4d;
        border: none;
        border-radius: 30px;
        font-size: 16px;
        font-weight: bold;
        color: white;
        transition: background 0.3s ease;
    }

        .btn-danger:hover {
            background-color: #cc0000;
        }

    /* Dropdown Styling */
    .action-dropdown {
        border-radius: 8px;
        padding: 5px 10px;
        font-size: 14px;
        width: 100%;
        text-align: left;
        border: 1px solid #ddd;
    }

        .action-dropdown:focus {
            border-color: #007bff;
            outline: none;
        }

    .assign-btn,
    .toggle-btn,
    .confirm-btn {
        width: 100%;
        text-align: center;
        padding: 8px;
        font-size: 13px;
        font-weight: bold;
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    }

    .assign-btn {
        background-color: #007bff;
        color: white;
    }

        .assign-btn:hover {
            background-color: #0056b3;
        }

    .confirm-btn {
        background-color: #ffc107;
        color: white;
    }

        .confirm-btn:hover {
            background-color: #e0a800;
        }

    .toggle-btn {
        background-color: #6c757d;
        color: white;
    }

        .toggle-btn:hover {
            background-color: #343a40;
        }

    #searchBox {
        border-radius: 20px;
        padding: 10px;
        font-size: 16px;
        width: 100%;
        border: 2px solid #007bff;
        background-color: #f9f9f9;
        padding-left: 15px;
    }

        #searchBox::placeholder {
            font-style: italic;
            color: #aaa;
        }

    .input-group {
        margin-bottom: 15px;
    }

    tr.inactive {
        background-color: #f8f9fa;
        color: #6c757d;
        text-decoration: line-through;
    }

    .action-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    /* Modernized Buttons Styling */
    .btn {
        font-size: 14px;
        padding: 8px 16px;
        border-radius: 10px;
        font-weight: bold;
        text-transform: uppercase;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-warning {
        background-color: #ffc107;
        color: #fff;
        border: none;
    }

        .btn-warning:hover {
            background-color: #e0a800;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: #fff;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #343a40;
        }

    .action-form {
        margin-bottom: 8px;
    }

    .badge {
        padding: 6px 12px;
        border-radius: 10px;
        font-size: 12px;
        font-weight: bold;
    }
</style>



<script>
    let currentForm = null;

    function confirmAssignRole(userName, form) {
        currentForm = form;
        const selectedRole = form.querySelector("select[name='roleName']").value;
        const modalBody = document.getElementById("confirmationModalBody");
        modalBody.innerHTML = `Are you sure you want to assign <strong>${userName}</strong> to <strong>${selectedRole}</strong> Role ?`;

        const confirmButton = document.getElementById("confirmActionButton");
        confirmButton.onclick = () => currentForm.submit();

        const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
        modal.show();
    }

    function confirmAccount(userName, form) {
        currentForm = form;
        const modalBody = document.getElementById("confirmationModalBody");
        modalBody.innerHTML = `Are you sure you want to confirm the account for <strong>${userName}</strong>?`;

        const confirmButton = document.getElementById("confirmActionButton");
        confirmButton.onclick = () => currentForm.submit();

        const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
        modal.show();
    }

        document.getElementById("searchBox").addEventListener("input", function () {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll("#usersTable tbody tr");

        rows.forEach(row => {
            const cells = Array.from(row.children);
            const isVisible = cells.some(cell => cell.textContent.toLowerCase().includes(searchValue));
            row.style.display = isVisible ? "" : "none";
        });
    });

     function toggleActivation(button, userName, form) {
        const status = button.getAttribute("data-status") === "True";
        const action = status ? "deactivate" : "activate";
        const modalBody = document.getElementById("confirmationModalBody");

        modalBody.innerHTML = `Are you sure you want to ${action} the account for <strong>${userName}</strong>?`;

        const confirmButton = document.getElementById("confirmActionButton");
        confirmButton.onclick = () => form.submit();

        const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
        modal.show();
    }

</script>