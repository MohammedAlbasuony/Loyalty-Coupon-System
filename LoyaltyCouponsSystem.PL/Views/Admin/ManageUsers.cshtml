@model LoyaltyCouponsSystem.BLL.ViewModel.Admin.ManageUsersViewModel

@{
    ViewData["Title"] = "Manage Users";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

@*<h1>Manage Users</h1>*@

@if (User.IsInRole("SuperAdmin"))
{
    <div class="container mt-4">

    <b><h1 class="text-primary text-center">Manage Users</h1></b>

        <div class="table-responsive mt-4">
            <h3 class="text-success">Confirmed Users</h3>
            <table id="confirmedUsersTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
                <thead class="thead-dark bg-primary text-white">
                    <tr>
                        <th>Username</th>
                        <th>National ID</th>
                        <th>Phone Number</th>
                        <th>Optional Phone</th>
                        <th>Governorate</th>
                        <th>City</th>
                        <th>Current Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.ConfirmedUsers)
                    {
                        if (user.Role.Equals("SuperAdmin", StringComparison.OrdinalIgnoreCase))
                        {
                            continue; // Skip the row entirely
                        }
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.NationalID</td>
                            <td>@user.PhoneNumber</td>
                            <td>@(string.IsNullOrEmpty(user.OptionalPhoneNumber) ? "No Optional phone number entered" : user.OptionalPhoneNumber)</td>
                            <td>@user.Governorate</td>
                            <td>@user.City</td>
                            <td>@user.Role</td>
                            <td>
                                <div class="action-container d-flex align-items-center gap-3">
                                    <form asp-action="AssignRole" asp-controller="Admin" method="post" class="d-flex align-items-center">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <select name="roleName" class="form-select action-dropdown">
                                            <option disabled selected>Select Role</option>
                                            @foreach (var role in Model.AllRoles)
                                            {
                                                <option value="@role">@role</option>
                                            }
                                        </select>
                                        <button type="button" class="btn btn-primary btn-sm shadow assign-btn" onclick="confirmAssignRole('@user.UserName', this.form)">
                                            Assign Role
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>




    <!-- Unconfirmed Users Section -->
        <div class="table-responsive mt-4">
            <h3 class="text-danger">Unconfirmed Users</h3>
            <table id="unconfirmedUsersTable" class="table table-hover table-striped shadow-lg rounded border-light-modern">
                <thead class="thead-dark bg-primary text-white">
                    <tr>
                        <th>Username</th>
                        <th>National ID</th>
                        <th>Phone Number</th>
                        <th>Optional Phone</th>
                        <th>Governorate</th>
                        <th>City</th>
                        <th>Current Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.UnconfirmedUsers)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.NationalID</td>
                            <td>@user.PhoneNumber</td>
                            <td>@(string.IsNullOrEmpty(user.OptionalPhoneNumber) ? "No Optional phone number entered" : user.OptionalPhoneNumber)</td>
                            <td>@user.Governorate</td>
                            <td>@user.City</td>
                            <td>@user.Role</td>
                            <td>
                                <div class="action-container d-flex flex-column align-items-start gap-2">
                                    <form asp-action="AssignRole" asp-controller="Admin" method="post" class="d-flex align-items-center">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <select name="roleName" class="form-select action-dropdown">
                                            <option disabled selected>Select Role</option>
                                            @foreach (var role in Model.AllRoles)
                                            {
                                                <option value="@role">@role</option>
                                            }
                                        </select>
                                        <button type="button" class="btn btn-primary btn-sm shadow assign-btn" onclick="confirmAssignRole('@user.UserName', this.form)">
                                            Assign Role
                                        </button>
                                    </form>
                                    <form asp-action="ConfirmAccount" asp-controller="Admin" method="post">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <button type="button" class="btn btn-warning btn-sm shadow confirm-btn" onclick="confirmAccount('@user.UserName', this.form)">
                                            Confirm Account
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



</div>


    <!-- Confirmation Modals -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow">
                <div class="modal-header bg-gradient-primary text-white">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                    <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center" id="confirmationModalBody">
                    <!-- Content updated dynamically via JavaScript -->
                </div>
                <div class="modal-footer justify-content-start">
                    <button type="button" class="btn btn-danger btn-lg px-4 py-2" id="confirmActionButton">
                        <i class="fas fa-check-circle"></i> Confirm
                    </button>
                    <button type="button" class="btn btn-secondary btn-lg px-4 py-2 ms-2" data-bs-dismiss="modal">
                        <i class="fas fa-times-circle"></i> Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>

}
else
{
    <div class="alert alert-danger" role="alert">
        You do not have permission to view this page.
    </div>
}


<style>
    .table {
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

    .table th {
        text-align: center;
        background-color: #007bff !important;
        color: #ffffff !important;
        font-weight: bold;
        padding: 12px;
        text-transform: uppercase;
    }

    .table-hover tbody tr:hover {
        background-color: #e9f5ff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }

    h1 {
        font-weight: bold;
        letter-spacing: 1px;
    }


    .modal-content {
        border-radius: 15px;
        background: #f9f9f9;
    }

    .modal-header {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
        font-weight: bold;
    }

    .modal-body {
        font-size: 18px;
        color: #333;
        padding: 20px 30px;
    }

    .modal-footer {
        border-top: none;
        padding: 20px 30px;
    }

    .btn-danger {
        background-color: #ff4d4d;
        border: none;
        border-radius: 30px;
        font-size: 16px;
        font-weight: bold;
        color: white;
        transition: background 0.3s ease;
    }

    .btn-danger:hover {
        background-color: #cc0000;
    }

    /* Action Container */
    .action-container {
        display: flex;
        flex-direction: row; /* Adjusted for horizontal alignment */
        align-items: center;
        gap: 10px;
    }

    /* Action Container */
    .action-container {
        display: flex;
        flex-direction: row; /* Ensure horizontal alignment */
        align-items: center;
        gap: 20px; /* Increase space between dropdown and button */
    }

    /* Dropdown Styling */
    .action-dropdown {
        border-radius: 8px;
        padding: 5px 10px;
        font-size: 14px;
        width: auto;
        max-width: 180px; /* Wider dropdown for better readability */
        text-align: left; /* Align text to the beginning */
        border: 1px solid #ddd;
        transition: border-color 0.3s ease;
    }

        .action-dropdown:focus {
            border-color: #007bff;
            outline: none;
        }

    /* Assign Button */
    .assign-btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 6px 12px; /* Adjust button size */
        font-size: 12px;
        font-weight: bold;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

        .assign-btn:hover {
            background-color: #0056b3;
        }


    /* Confirm Account Button */
    .confirm-btn {
        background-color: #ffc107;
        color: white;
        border: none;
        padding: 6px 12px; /* Smaller button size */
        font-size: 12px;
        font-weight: bold;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

        .confirm-btn:hover {
            background-color: #e0a800;
            color:#FFFFFF
        }

    

</style>

<script>
    let currentForm = null;

    function confirmAssignRole(userName, form) {
        currentForm = form;
        const selectedRole = form.querySelector("select[name='roleName']").value;
        const modalBody = document.getElementById("confirmationModalBody");
        modalBody.innerHTML = `Are you sure you want to assign <strong>${userName}</strong> to <strong>${selectedRole}</strong> Role ?`;

        const confirmButton = document.getElementById("confirmActionButton");
        confirmButton.onclick = () => currentForm.submit();

        const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
        modal.show();
    }

    function confirmAccount(userName, form) {
        currentForm = form;
        const modalBody = document.getElementById("confirmationModalBody");
        modalBody.innerHTML = `Are you sure you want to confirm the account for <strong>${userName}</strong>?`;

        const confirmButton = document.getElementById("confirmActionButton");
        confirmButton.onclick = () => currentForm.submit();

        const modal = new bootstrap.Modal(document.getElementById("confirmationModal"));
        modal.show();
    }
</script>