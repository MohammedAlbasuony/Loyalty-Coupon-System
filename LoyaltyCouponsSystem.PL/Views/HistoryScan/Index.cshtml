@{

    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QR Code Scanner</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- For KeyFrame -->
    <link rel="stylesheet" href="~/css/Key.css">

    <style>
        /* Styling for the video */
        #preview {
            width: 100%;
            height: auto;
            position: relative;
            border: 2px solid #4CAF50;
            border-radius: 8px;
        }

        /* Styling for the scanning overlay */
        #scannerOverlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px; /* Adjust the height of the scanning bar */
            background-color: rgba(0, 255, 0, 0.5); /* Green color with transparency */
            animation: scanning 2s infinite linear;
        }

       

        /* Hide elements initially */
        .hidden {
            display: none;
        }
    </style>



   
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">QR Code Scanner</h1>

        <div class="row">
            <!-- Upload Form -->
            <div class="col-md-6">
                <h3>Upload Image</h3>
                <form method="post" enctype="multipart/form-data" id="uploadForm">
                    <div class="mb-3">
                        <label for="postedFile" class="form-label">Select an image with QR Code:</label>
                        <input type="file" class="form-control" id="postedFile" name="postedFile" accept="image/*" />
                    </div>
                    <button type="button" class="btn btn-primary w-100" id="uploadButton">Upload and Decode</button>
                </form>
            </div>

            <!-- Camera Scanner -->
            <div class="col-md-6">
                <h3>Scan with Camera</h3>
                <button class="btn btn-success w-100 mb-3" id="scanButton">Start Scanning</button>
                <div class="position-relative">
                    <video id="preview" class="hidden"></video>
                    <div id="scannerOverlay" class="hidden"></div>
                </div>
            </div>
        </div>

        <!-- Display Result -->
        <div id="result" class="mt-4 text-center">
            <h3>Decoded QR Code:</h3>
            <p class="alert alert-success" id="decodedText"></p>
        </div>
    </div>

    <!-- JS Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/jsqr/dist/jsQR.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/tesseract.js@2.1.1/dist/tesseract.min.js"></script>

    <script>
        const video = document.getElementById('preview');
        const scanButton = document.getElementById('scanButton');
        const uploadButton = document.getElementById('uploadButton');
        const scannerOverlay = document.getElementById('scannerOverlay');
        const resultText = document.getElementById('decodedText');
        const resultDiv = document.getElementById('result');

        // Hide result initially
        resultDiv.style.display = 'none';

        scanButton.onclick = async () => {
            video.classList.remove('hidden');
            scannerOverlay.classList.remove('hidden');

            // Start the camera
            const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } });
            video.srcObject = stream;
            video.play();

            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');

            function scanFrame() {
                if (video.paused || video.ended) return;
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, canvas.width, canvas.height);

                if (code) {
                    alert('QR Code scanned: ' + code.data);
                    resultText.innerText = code.data;
                    resultDiv.style.display = 'block';

                    // Stop video stream
                    video.srcObject.getTracks().forEach(track => track.stop());
                } else {
                    requestAnimationFrame(scanFrame);
                }
            }

            scanFrame();
        };

        uploadButton.onclick = () => {
            const fileInput = document.getElementById('postedFile');
            const file = fileInput.files[0];
            if (!file) {
                alert('Please select a file.');
                return;
            }

            const reader = new FileReader();
            reader.onload = async (e) => {
                const image = new Image();
                image.src = e.target.result;
                image.onload = () => {
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');
                    canvas.width = image.width;
                    canvas.height = image.height;
                    ctx.drawImage(image, 0, 0);

                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                    const code = jsQR(imageData.data, canvas.width, canvas.height);

                    if (code) {
                        resultText.innerText = code.data;
                        resultDiv.style.display = 'block';
                    } else {
                        alert('No QR code found in the image.');
                    }
                };
            };
            reader.readAsDataURL(file);
        };
    </script>
</body>
</html>
