@using LoyaltyCouponsSystem.BLL.ViewModel.QRCode
@model IEnumerable<HistoryTransactionGeneratedQRVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Transaction Of QRCode Generated</h4>
            <form method="get" class="form-inline">
                <div class="row">
                    <div class="col">
                        <input type="text" name="serialNumber" class="form-control" placeholder="Serial Number" value="@ViewContext.HttpContext.Request.Query["serialNumber"]" />
                    </div>
                    <div class="col">
                        <input type="text" name="fromSequence" class="form-control" placeholder="From Sequence (String)" value="@ViewContext.HttpContext.Request.Query["fromSequence"]" />
                    </div>
                    <div class="col">
                        <input type="text" name="toSequence" class="form-control" placeholder="To Sequence (String)" value="@ViewContext.HttpContext.Request.Query["toSequence"]" />
                    </div>
                    <div class="col">
                        <select name="typeOfCoupon" class="form-select" @* class="form-control" *@>
                            <option disabled selected>اختر نوع الكوبون</option>
                            <option value="راك ثيرم">راك ثيرم</option>
                            <option value="صرف جي تكس">صرف جي تكس</option>
                            <option value="اقطار كبيرة وهودذا">اقطار كبيرة وهودذا</option>
                            <option value="كعب راك ثيرم">كعب راك ثيرم</option>
                            <option value="كعب صرف جي تكس">كعب صرف جي تكس</option>
                            <option value="كعب اقطار كبيرة وهودذا">كعب اقطار كبيرة وهودذا</option>
                        </select>
                    </div>
                    <div class="col">
                        <select id="governorate" name="governorate" class="form-select">
                            <option disabled selected>Select Governorate</option>
                            @foreach (var governorate in ViewBag.Governorates as IEnumerable<string>)
                            {
                                <option value="@governorate">@governorate</option>
                            }
                        </select>
                    </div>
                    <div class="col">
                        <select id="area" name="area" class="form-select" disabled>
                            <option disabled selected>Select Area</option>
                        </select>
                    </div>
                    <div class="col">
                        <select name="status" class="form-select">
                            <option disabled selected>Select Status</option>
                            <option value="Created">Created</option>
                            <option value="ScannedFromRepresentative">Scanned from Representative</option>
                            <option value="Closed">Closed</option>
                        </select>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">Filter</button>
                    </div>
                </div>
            </form>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.FromSerialNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ToSerialNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TypeOfCoupone)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.CreationDateTime)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model.NumberOfCoupones)
                            </th>


                            <th>
                                @Html.DisplayNameFor(model => model.GeneratedBy)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Value)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Governorate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Area)
                            </th>
                            <th>
                                Details
                            </th>
                            <th>
                                Print
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FromSerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ToSerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TypeOfCoupone)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.CreationDateTime)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.NumberOfCoupones)
                                </td>



                                <td>
                                    @Html.DisplayFor(modelItem => item.GeneratedBy)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Governorate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Area)
                                </td>
                                <td>
                                    <form asp-action="GetAllCoupons" method="get" style="display:inline;">
                                        <input type="hidden" name="fromSequence" value="@item.FromSerialNumber" />
                                        <input type="hidden" name="toSequence" value="@item.ToSerialNumber" />
                                        <button type="submit" class="btn btn-primary">Details</button>
                                    </form>
                                </td>
                                <td>
                                    <form asp-controller="GenerateQRCode" asp-action="PrintingExistingCoupones" method="get" style="display:inline;">
                                        <input type="hidden" name="FromSerialNum" value="@item.FromSerialNumber" />
                                        <input type="hidden" name="ToSerialNum" value="@item.ToSerialNumber" />

                                      
                                        <button type="submit" class="btn btn-primary">Printing</button>
                                    </form>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <nav>
                    <ul class="pagination">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@(ViewBag.CurrentPage - 1)">Previous</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=1">1</a>
                            </li>
                            <li class="page-item disabled">
                                <a class="page-link">...</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@i">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
                        {
                            <li class="page-item disabled">
                                <a class="page-link">...</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@ViewBag.TotalPages">@ViewBag.TotalPages</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?serialNumber=@ViewContext.HttpContext.Request.Query["serialNumber"]&fromSequence=@ViewContext.HttpContext.Request.Query["fromSequence"]&toSequence=@ViewContext.HttpContext.Request.Query["toSequence"]&typeOfCoupon=@ViewContext.HttpContext.Request.Query["typeOfCoupon"]&governorate=@ViewContext.HttpContext.Request.Query["governorate"]&area=@ViewContext.HttpContext.Request.Query["area"]&status=@ViewContext.HttpContext.Request.Query["status"]&page=@(ViewBag.CurrentPage + 1)">Next</a>
                            </li>
                        }
                    </ul>
                </nav>

            </div>
        </div>
    </div>

    <script>
        document.getElementById('governorate').addEventListener('change', function () {
            const governorate = this.value;
            const areaDropdown = document.getElementById('area');

            if (governorate) {
                 areaDropdown.disabled = false;
                fetch(`/HistoryGenerated/GetAreas?governorate=${governorate}`)

                    .then(response => response.json())
                    .then(data => {
                        areaDropdown.innerHTML = '<option disabled selected>Select Area</option>';
                        data.forEach(area => {
                            const option = document.createElement('option');
                            option.value = area;
                            option.textContent = area;
                            areaDropdown.appendChild(option);
                        });
                        areaDropdown.disabled = false;
                    });
            } else {
                areaDropdown.innerHTML = '<option value="">Select Area</option>';
                areaDropdown.disabled = true;
            }
        });
    </script>
