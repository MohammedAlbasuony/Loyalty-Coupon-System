@model AssignmentViewModel

@{
    ViewData["Title"] = "Assign QR Codes";
    Layout = "~/Views/Shared/_LayoutCoupon.cshtml";
}
<br />
<form asp-action="AssignQRCode" method="post" id="assignForm" class="shadow-lg p-4 bg-white rounded">
    <h2 class="text-center text-primary mb-4">Exchange Permission</h2>

    <div class="row g-3">
        <!-- Select Customer -->
        <div class="col-md-6">
            <label for="CustomerCodeOrName" class="form-label fw-bold">Select Customer</label>
            <select asp-for="SelectedCustomerCode" class="form-select" required>
                <option value="">Select Customer</option>
                @foreach (var customer in Model.Customers)
                {
                    <option value="@customer.Value">@customer.Text</option>
                }
            </select>
            <span class="text-danger" asp-validation-for="SelectedCustomerCode"></span>
        </div>

        <!-- Select Technician -->
        <div class="col-md-6">
            <label for="TechnicianCodeOrName" class="form-label fw-bold">Select Technician</label>
            <select asp-for="SelectedTechnicianCode" class="form-select" required>
                <option value="">Select Technician</option>
                @foreach (var technician in Model.Technicians)
                {
                    <option value="@technician.Value">@technician.Text</option>
                }
            </select>
            <span class="text-danger" asp-validation-for="SelectedTechnicianCode"></span>
        </div>

        <!-- Select Governate -->
        <div class="col-md-6">
            <label for="Governate" class="form-label fw-bold">Select Governate</label>
            <select asp-for="SelectedGovernate" class="form-select" id="Governate" required>
                <option value="">Select Governate</option>
                @foreach (var governate in Model.Governates)
                {
                    <option value="@governate.Value">@governate.Text</option>
                }
            </select>
            <span class="text-danger" asp-validation-for="SelectedGovernate"></span>
        </div>

        <!-- Select City -->
        <div class="col-md-6">
            <label for="City" class="form-label fw-bold">Select City</label>
            <select asp-for="SelectedCity" class="form-select" id="City" required>
                <option value="">Select City</option>
            </select>
            <span class="text-danger" asp-validation-for="SelectedCity"></span>
        </div>

        <!-- Exchange Permission -->
        <div class="col-md-6">
            <label for="ExchangePermission" class="form-label fw-bold">Exchange Permission Number</label>
            <input asp-for="ExchangePermission" name="Transactions[0].ExchangePermission" class="form-control" placeholder="Enter exchange permission number" required />
            <span class="text-danger" asp-validation-for="ExchangePermission"></span>
        </div>
    </div>

    <!-- Dynamic Coupon Fields -->
    <div id="couponFieldsContainer" class="mt-4">
        <div class="row g-3 align-items-center couponFields">
            <div class="col-md-3">
                <label for="CouponSort" class="form-label fw-bold">Coupon Sort</label>
                <select name="Transactions[0].SelectedCouponSort" class="form-select" required>
                    <option value="">Select Coupon Sort</option>
                    @foreach (var sort in Model.CouponSorts)
                    {
                        <option value="@sort.Value">@sort.Text</option>
                    }
                </select>
                <span class="text-danger" asp-validation-for="Transactions[0].SelectedCouponSort"></span>
            </div>
            <div class="col-md-3">
                <label for="CouponType" class="form-label fw-bold">Coupon Type</label>
                <select name="Transactions[0].SelectedCouponType" class="form-select" required>
                    <option value="">Select Coupon Type</option>
                    @foreach (var type in Model.CouponTypes)
                    {
                        <option value="@type.Value">@type.Text</option>
                    }
                </select>
                <span class="text-danger" asp-validation-for="Transactions[0].SelectedCouponType"></span>
            </div>
            <div class="col-md-3">
                <label for="StartSequenceNumber" class="form-label fw-bold">Start Sequence Number</label>
                <input type="number" name="Transactions[0].StartSequenceNumber" class="form-control" placeholder="Enter start sequence number" required min="1" />
                <span class="text-danger" asp-validation-for="Transactions[0].StartSequenceNumber"></span>
            </div>
            <div class="col-md-3">
                <label for="EndSequenceNumber" class="form-label fw-bold">End Sequence Number</label>
                <input type="number" name="Transactions[0].EndSequenceNumber" class="form-control" placeholder="Enter end sequence number" required min="1" />
                <span class="text-danger" asp-validation-for="Transactions[0].EndSequenceNumber"></span>
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button type="button" class="btn btn-danger removeFieldsButton">Remove</button>
            </div>
        </div>
    </div>

    <!-- Add Another Button -->
    <div class="text-center mt-3">
        <button type="button" class="btn btn-outline-secondary" id="addFieldsButton">Add Another</button>
    </div>

    <!-- Submit Button -->
    <div class="text-center mt-4">
        <button type="submit" class="btn btn-primary mt-3 px-4 py-2 rounded-pill shadow-sm" style="font-size: 16px;">Assign</button>
    </div>
</form>


<br />
<br />


@section Scripts {
    <script>

                        let index = 1; // Initialize index for dynamic rows

        // Add new row
        document.getElementById("addFieldsButton").addEventListener("click", function () {
            const container = document.getElementById("couponFieldsContainer");
            const newFields = document.createElement("div");
            newFields.classList.add("row", "g-3", "align-items-center", "couponFields", "mt-2");
            newFields.innerHTML = `
                <div class="col-md-3">
                    <label for="CouponSort" class="form-label fw-bold">Coupon Sort</label>
                    <select name="Transactions[${index}].SelectedCouponSort" class="form-select" required>
                        <option value="">Select Coupon Sort</option>
        @foreach (var sort in Model.CouponSorts)
        {
                                <option value="@sort.Value">@sort.Text</option>
        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="CouponType" class="form-label fw-bold">Coupon Type</label>
                    <select name="Transactions[${index}].SelectedCouponType" class="form-select" required>
                        <option value="">Select Coupon Type</option>
        @foreach (var type in Model.CouponTypes)
        {
                                <option value="@type.Value">@type.Text</option>
        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="StartSequenceNumber" class="form-label fw-bold">Start Sequence Number</label>
                    <input type="number" name="Transactions[${index}].StartSequenceNumber" class="form-control" placeholder="Enter start sequence number" required />
                </div>
                <div class="col-md-3">
                    <label for="EndSequenceNumber" class="form-label fw-bold">End Sequence Number</label>
                    <input type="number" name="Transactions[${index}].EndSequenceNumber" class="form-control" placeholder="Enter end sequence number" required />
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button type="button" class="btn btn-danger removeFieldsButton">Remove</button>
                </div>
            `;
            container.appendChild(newFields);

            index++;
        });

        // Remove row
        document.addEventListener("click", function (event) {
            if (event.target.classList.contains("removeFieldsButton")) {
                const fieldGroup = event.target.closest(".couponFields");
                fieldGroup.remove();
            }
        });

        // Hide "Remove" button for the first row initially
        document.addEventListener("DOMContentLoaded", function () {
            const firstFieldGroup = document.querySelector(".couponFields");
            if (firstFieldGroup) {
                const firstRemoveButton = firstFieldGroup.querySelector(".removeFieldsButton");
                if (firstRemoveButton) {
                    firstRemoveButton.style.display = "none"; // Hide remove button for the first row
                }
            }
        });










        // Make the city dropdown dynamic based on selected governate
        document.getElementById("Governate").addEventListener("change", function () {
            var governate = this.value;
            var citySelect = document.getElementById("City");

            // Clear existing options
            citySelect.innerHTML = "<option value=''>Select City</option>";

            // Define static cities for demonstration
            var cities = {
                "Cairo": ["Nasr City", "City2"],
                "Gharbeia": ["Tanta", "Qotor"],
                "Sharqeia": ["City5", "City6"],
                "Alexandria": ["Smouha", "City8"]
            };

            // Populate city dropdown based on selected governate
            if (cities[governate]) {
                cities[governate].forEach(function (city) {
                    var option = document.createElement("option");
                    option.value = city;
                    option.text = city;
                    citySelect.appendChild(option);
                });
            }
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>


    <script>
        // Initialize Select2 on the Customer dropdown
        $(document).ready(function () {
            $('.select2').select2({
                placeholder: 'Select Customer',
                allowClear: true
            });
        });
    </script>

    <!-- Include Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
}

<style>
    .form-label {
        color: #0056b3;
        font-weight: bold;
    }

    .form-select,
    .form-control {
        border-radius: 8px;
        border: 2px solid #007bff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .form-select:focus,
        .form-control:focus {
            border-color: #0056b3;
            box-shadow: 0 0 8px rgba(0, 86, 179, 0.5);
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 25px;
        padding: 10px 30px;
        font-size: 16px;
    }

    .btn-outline-secondary {
        border-radius: 25px;
        color: #007bff;
        border: 2px solid #007bff;
        padding: 8px 20px;
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #007bff;
            color: #fff;
        }

    .select2-container .select2-selection--single {
        height: 38px; /* Adjust height to match `form-select` */
        border-radius: 8px;
        border: 1px solid #ced4da; /* Match other field borders */
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 38px;
        color: #495057;
        padding-left: 8px; /* Align with other fields */
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 38px;
    }

    hr {
        border-top: 2px solid #e0e0e0;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    
</style>

